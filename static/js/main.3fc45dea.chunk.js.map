{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","val","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","res","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCKCQ,EAXF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAK,SAASC,IAAG,+BAA0BH,EAA1B,cACtB,gCACI,6BAAKF,IACL,4BAAIC,WCULK,EAdE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACA,8BACKA,EAAOC,KAAI,SAACC,EAAIC,GACjB,OAAS,cAAC,EAAD,CAETR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKEC,EAXG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACAA,UAAY,mCACZW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCDPI,EAPA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAS,SAAUC,OAAQ,SAAxC,SACKH,EAAMI,YCeJC,E,kDAhBX,WAAYL,GAAO,IAAD,8BACd,cAAMA,IACDM,MAAQ,CACTC,UAAU,GAHA,E,qDAMlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAE7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,4DAEJG,KAAKV,MAAMI,a,GAdCQ,aCyCZC,G,wDApCX,aAAc,IAAD,8BACT,gBAWJC,eAAe,SAACC,GACZ,EAAKJ,SAAS,CAACjB,YAAaqB,EAAMC,OAAOC,SAXzC,EAAKX,MAAQ,CACTjB,OAAQ,GACRK,YAAa,IAJR,E,qDAOb,WAAoB,IAAD,OACfwB,MAAM,8CACL3C,MAAK,SAAA4C,GAAG,OAAIA,EAAIC,UAChB7C,MAAM,SAAA8C,GAAK,OAAI,EAAKV,SAAS,CAACtB,OAAQgC,S,oBAK3C,WACI,MAA8BX,KAAKJ,MAA5BjB,EAAP,EAAOA,OAAQK,EAAf,EAAeA,YACT4B,EAAiBjC,EAAOkC,QAAO,SAACC,GAClC,OAAOA,EAAM1C,KAAK2C,cAAcC,SAAShC,EAAY+B,kBAEzD,OAAQpC,EAAOsC,OAGX,sBAAK1C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAgBe,KAAKI,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAUzB,OAAUiC,WAPzB,oBAAIrC,UAAU,KAAd,yB,GAtBO2B,cCClBgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B5D,M","file":"static/js/main.3fc45dea.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nconst Card = ({name, email, id}) => {\n    return(\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n            <img alt ='robots' src={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    )\n}\nexport default Card","import React from 'react';\nimport Card from '../components/Card'\n\nconst CardList = ({robots}) => {\n    return (\n    <div>\n        {robots.map((val,i)=>{\n        return ( <Card \n        key={i} \n        id={robots[i].id} \n        name={robots[i].name} \n        email={robots[i].email}\n        /> )\n    })}\n    </div>\n    )\n}\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n    return (\n        <div className=\"pa2\">\n            <input \n            className = \"pa3 ba b--green bg-lightest-blue\"\n            type=\"search\" \n            placeholder=\"search robots\"\n            onChange={searchChange}/>\n        </div>\n    )\n}\nexport default SearchBox;","import React from 'react';\nconst Scroll = (props) =>{\n    return(\n        <div style={{overflow:\"scroll\", height: '500px'}}>\n            {props.children}\n        </div>\n    )\n}\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundry extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n    componentDidCatch(error, info){\n        this.setState({hasError: true})\n    }\n    render(){\n        if(this.state.hasError){\n            return <h1>Oooops!. That is not good!</h1>\n        }\n        return this.props.children\n    }\n}\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry'\nimport '../containers/App.css'\nclass App extends Component {\n    constructor(){\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(res => res.json())\n        .then( users => this.setState({robots: users}))\n    }\n    onSearchChange=(event)=>{\n        this.setState({searchfield: event.target.value})\n    }\n    render(){\n        const {robots, searchfield} = this.state\n        const filteredRobots = robots.filter((robot)=>{\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n        })\n        return !robots.length ?\n           <h1 className=\"tc\">Loading</h1> :\n        (\n            <div className=\"tc\">\n            <h1 className=\"f1\">RoboFriends</h1>\n            <SearchBox searchChange = {this.onSearchChange}/>\n            <Scroll>\n                <ErrorBoundry>\n                <CardList robots = {filteredRobots}/>\n                </ErrorBoundry>\n            </Scroll>\n            </div>\n        )\n    }\n    \n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}